module SpotXAPI

  def self.s3_reports
    # get the s3 instance and bucket
    s3 = Aws::S3::Resource.new
    bucket = s3.bucket(ENV["s3_bucket_name"])

    # form the awkward date format they use to name files
    yesterday = Date.today-1
    year = yesterday.year.to_s
    month = yesterday.month.to_s.length == 1 ? "0" + yesterday.month.to_s : yesterday.month.to_s
    day = yesterday.day.to_s.length == 1 ? "0" + yesterday.day.to_s : yesterday.day.to_s
    date_key = year + month + day + "__" + year + month + day

    # grab yesterday's reports
    country = bucket.object('Spotible Markets LLC_Channel by Country_' + date_key + ".csv").get.body.string
    channel = bucket.object('Spotible Markets LLC_URL by Channel_' + date_key + ".csv").get.body.string
    deal = bucket.object('Spotible Markets LLC_URL by Deal by Channel_' + date_key + ".csv").get.body.string

    # used to date the files in a less awkward way
    date_string = "#{year}/#{day}/#{month}"
    MarketsMailer.daily_spotx_reports(country, channel, deal, date_string).deliver_now
  end

  @@base_url = "https://api.spotxchange.com/1.0"
  @@publisher_id = 98603
  @@refresh_token = "a2af72544e6983d0f2cdb4640a0a8ad5d8ca1814"
  @@access_token = "23e1ded37bcf4d713e45b91aa87bc8c3052f3fb9"

  # method should be a symbol
  def call_spotx(method, target, payload=nil, timeout=10000)
    response = JSON.parse(RestClient::Request.execute(:method => method,
                     :url => @@base_url+target,
                     :payload => payload,
                     :headers => {"Authorization" => "Bearer #{@@access_token}"},
                     :timeout => timeout
    ))
  end

  # This resource doesnt appear to exist aymore
  def channel_list
    target = "/Publisher(#{@@publisher_id})/Channel"
    call_spotx(:get, target, {})
  end

  def channel_info(channel_id)
    target = "/Publisher(#{@@publisher_id})/Channel(#{channel_id})"
    call_spotx(:get, target, {})
  end

  def traffic
    target = @@base_url + "/Publisher(98603)/Channels/TrafficReport?date_range=year_through_date "
  end


end
